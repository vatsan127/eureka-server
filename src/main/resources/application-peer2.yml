server:
  port: 8761

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    info:
      access: read_only

spring:
  application:
    name: eureka-server-peer2

eureka:
  server:
    enable-self-preservation: false
    eviction-interval-timer-in-ms: 5000
    #peer-eureka-nodes-update-interval-ms: # Interval to refresh the list of peer nodes
    #peer-eureka-status-refresh-time-interval-ms: # Interval to check peer node status

  client:
    refresh.enable: false
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 30
    healthcheck.enabled: true
    service-url:
      defaultZone: http://eureka-server-peer1:8761/eureka/

  instance:
    prefer-ip-address: true
    #    hostname: ${HOSTNAME}
    #    instance-id: ${HOSTNAME}

    # Lease configuration
    lease-renewal-interval-in-seconds: 1 # Interval at which service instance sends a heartbeat to Eureka server
    lease-expiration-duration-in-seconds: 2 # Interval  Eureka server waits before marking a service as DOWN if no heartbeat is received

    # Health check
    health-check-url-path: /actuator/health
    status-page-url-path: /actuator/info

# Logging configuration for debugging
logging:
  level:
    com.netflix.eureka: INFO
    com.netflix.discovery: INFO